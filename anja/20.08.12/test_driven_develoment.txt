require 'test/unit'


class DoughTest < Test::Unit::TestCase
  def test_creation
    dough = Dough.new([:flour, :eggs, :sugar, :butter])
    assert dough, 'create a dough instance'    #assert = annehmen
  end

end



assert_equal( 2, add(1,1) )

Assertions

Innerhalb einer Testmethode sind Assertions (Annahmen) gesammelt
Jede Assertion gibt an, was erwartet wird
Die Testmethode hat 2 Paramter: Das erwartete Ergebnis und den Aufruf der zu testenden Methode


List of Assertions

All of these assertions have an implied message parameter as the last parameter unless otherwise noted.

assert(boolean) - The most generic of all the assertions. The assertion passes if the boolean expression evaluates to true. It's easy to avoid this one, but it's better to use one of the more expressive assertions when appropriate.

assert_block() {|| ... } - Evaluate the block and pass the assertion if the evaluation is true.

assert_equal(expected, actual) and assert_not_equal(expected, actual) - One of the most common assertions you'll use. The assertion passes if the expected value matches (or doesn't match) the actual value. The equality test is performed with the == operator.

assert_in_delta(expected, actual, delta) - This is the equivalent of assert_equal for floating point numbers. Since you cannot (or should not) compare floating point numbers with the == operator, this tests if the expected floating point number is within the delta range of the actual number.

assert_instance_of(klass, object) and assert_kind_of(klass, object) - Passes if the kind_of? or instance_of? methods on object return true for klass. The instance_of? methods returns true if the two objects are of the same type, and kind_of? returns true if the object is of the same type or an inherited type.

assert_match(regexp,string) and assert_no_match(regexp,string) - Passes (or fails) if string =~ regexp returns anything other than nil.

assert_nil(object) and assert_not_nil(object) - Passes (or fails) if the object is nil.

assert_same(expected, actual) and assert_not_same(expected, actual) - These are the same as assert_equal and assert_not_equal except they use the equal? method instead of the == operator.

assert_nothing_raised() {|| ... } and assert_nothing_thrown() {|| ... } - Runs the provided block and will pass if no exceptions were raised or throw.

assert_raise(*args) {|| ... } - Passes if the block runs and raises an exception of one of the types listed in args. This will pass on all other exceptions, though the exception may go unchecked.

assert_throws(*args) {|| ... } - Passes if the block runs and throws a symbol listed in args.

assert_respond_to(object, method) - Passes if the object will respond to the method listed in the arguments. This is achieved by using the respond_to? method itself.